/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package trains;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import utils.DatabaseConnection;

public class MatchedTrains extends javax.swing.JFrame {

    static ArrayList<Integer> matchedTrainsNos;
    static String source = "", destination = "", clas = "";
    static String date1 = "";
    HashMap<String, Integer> trainNameAndNo;

    /**
     * Creates new form MatchedTrains
     */
    public MatchedTrains() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStopsDetails = new javax.swing.JTable();
        comboTrainName = new javax.swing.JComboBox();
        tgBtnMonday = new javax.swing.JToggleButton();
        tgBtnTuesday = new javax.swing.JToggleButton();
        tgBtnWednesday = new javax.swing.JToggleButton();
        tgBtnThursday = new javax.swing.JToggleButton();
        tgBtnFriday = new javax.swing.JToggleButton();
        tgBtnSaturday = new javax.swing.JToggleButton();
        tgBtnSunday = new javax.swing.JToggleButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstClasses = new javax.swing.JList();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblTrainType = new javax.swing.JLabel();
        lblTrainNo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setText("You Queried For");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Your Source Station", "Your Destination Station", "Class"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setText("Train Stops");

        jLabel2.setText("Date");

        jTextField1.setEditable(false);

        jButton2.setText("<-Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tblStopsDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stops", "Station Name", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblStopsDetails);

        comboTrainName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTrainNameItemStateChanged(evt);
            }
        });
        comboTrainName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTrainNameActionPerformed(evt);
            }
        });

        tgBtnMonday.setText("M");
        tgBtnMonday.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tgBtnMondayStateChanged(evt);
            }
        });

        tgBtnTuesday.setText("T");
        tgBtnTuesday.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tgBtnTuesdayStateChanged(evt);
            }
        });

        tgBtnWednesday.setText("W");
        tgBtnWednesday.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tgBtnWednesdayStateChanged(evt);
            }
        });

        tgBtnThursday.setText("T");
        tgBtnThursday.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tgBtnThursdayStateChanged(evt);
            }
        });

        tgBtnFriday.setText("F");
        tgBtnFriday.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tgBtnFridayStateChanged(evt);
            }
        });

        tgBtnSaturday.setText("S");
        tgBtnSaturday.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tgBtnSaturdayStateChanged(evt);
            }
        });

        tgBtnSunday.setText("S");
        tgBtnSunday.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tgBtnSundayStateChanged(evt);
            }
        });

        jScrollPane3.setViewportView(lstClasses);

        jLabel8.setText("Classes Available");

        jLabel9.setText("Train Type");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(216, 216, 216)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tgBtnSunday)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tgBtnMonday)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tgBtnTuesday)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tgBtnWednesday)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tgBtnThursday)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tgBtnFriday)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tgBtnSaturday))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblTrainNo)
                                        .addGap(58, 58, 58)
                                        .addComponent(comboTrainName, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblTrainType, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboTrainName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTrainNo))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tgBtnMonday)
                            .addComponent(tgBtnTuesday)
                            .addComponent(tgBtnWednesday)
                            .addComponent(tgBtnThursday)
                            .addComponent(tgBtnFriday)
                            .addComponent(tgBtnSaturday)
                            .addComponent(tgBtnSunday))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTrainType))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        /*tgBtnSunday.setToolTipText("Sunday");
         tgBtnMonday.setToolTipText("Monday");
         tgBtnTuesday.setToolTipText("Tuesday");
         tgBtnWednesday.setToolTipText("Wednesday");
         tgBtnThursday.setToolTipText("Thursday");
         tgBtnFriday.setToolTipText("Friday");
         tgBtnSaturday.setToolTipText("Saturday");
         */ String allTrainNos = "";
        if (matchedTrainsNos != null && !matchedTrainsNos.isEmpty()) {
            for (int trainNo : matchedTrainsNos) {
                System.out.println(trainNo);
                allTrainNos += trainNo + ",";
            }
            //remove last comma
            allTrainNos = allTrainNos.substring(0, allTrainNos.length() - 1);
            String queryForTrainNameAndNo = "select train_no,train_name from " + DatabaseConnection.TABLE_TRAIN_INFO
                    + " where train_no in(" + allTrainNos + ")";

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.addRow(new Object[]{source, destination, clas});
            jTextField1.setText("" + date1);
            try {
                ResultSet r = DatabaseConnection.executeQuery(queryForTrainNameAndNo);
                ArrayList<String> trainNames = new ArrayList<>();
                trainNameAndNo = new HashMap<>();
                while (r.next()) {
                    trainNameAndNo.put(r.getString("train_name"), r.getInt("train_no"));
                    trainNames.add(r.getString("train_name"));
                }
                comboTrainName.setModel(new DefaultComboBoxModel(trainNames.toArray()));

                lblTrainNo.setText("" + trainNameAndNo.get(comboTrainName.getSelectedItem().toString()));
                //get classes
                getClasses();
                getTrainType();
                getTrainRunningDays();
                getStopsDetails();
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_formComponentShown

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new TrainBetweenStations().setVisible(true);
        this.setVisible(false);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void comboTrainNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTrainNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTrainNameActionPerformed

    private void comboTrainNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboTrainNameItemStateChanged
        getClasses();
        getTrainType();
        getTrainRunningDays();
        getStopsDetails();
        lblTrainNo.setText("" + trainNameAndNo.get(comboTrainName.getSelectedItem().toString()));
    }//GEN-LAST:event_comboTrainNameItemStateChanged

    private void tgBtnSundayStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tgBtnSundayStateChanged
        // TODO add your handling code here:
        if (tgBtnSunday.getToolTipText().equalsIgnoreCase("Sunday Not available")) {
            tgBtnSunday.setSelected(false);
        } else {
            tgBtnSunday.setSelected(true);
        }
    }//GEN-LAST:event_tgBtnSundayStateChanged

    private void tgBtnMondayStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tgBtnMondayStateChanged
        // TODO add your handling code here:
        if (tgBtnMonday.getToolTipText().equalsIgnoreCase("Monday Not available")) {
            tgBtnMonday.setSelected(false);
        } else {
            tgBtnMonday.setSelected(true);
        }
    }//GEN-LAST:event_tgBtnMondayStateChanged

    private void tgBtnTuesdayStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tgBtnTuesdayStateChanged
        if (tgBtnTuesday.getToolTipText().equalsIgnoreCase("Tuesday Not available")) {
            tgBtnTuesday.setSelected(false);
        } else {
            tgBtnTuesday.setSelected(true);
        }// TODO add your handling code here:
    }//GEN-LAST:event_tgBtnTuesdayStateChanged

    private void tgBtnWednesdayStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tgBtnWednesdayStateChanged
        if (tgBtnWednesday.getToolTipText().equalsIgnoreCase("Wednesday Not available")) {
            tgBtnWednesday.setSelected(false);
        } else {
            tgBtnWednesday.setSelected(true);
        }// TODO add your handling code here:
    }//GEN-LAST:event_tgBtnWednesdayStateChanged

    private void tgBtnThursdayStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tgBtnThursdayStateChanged
        if (tgBtnThursday.getToolTipText().equalsIgnoreCase("Thursday Not available")) {
            tgBtnThursday.setSelected(false);
        } else {
            tgBtnThursday.setSelected(true);
        }// TODO add your handling code here:
    }//GEN-LAST:event_tgBtnThursdayStateChanged

    private void tgBtnFridayStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tgBtnFridayStateChanged
       if (tgBtnFriday.getToolTipText().equalsIgnoreCase("Friday Not available")) {
            tgBtnFriday.setSelected(false);
        } else {
            tgBtnFriday.setSelected(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tgBtnFridayStateChanged

    private void tgBtnSaturdayStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tgBtnSaturdayStateChanged
        if (tgBtnSaturday.getToolTipText().equalsIgnoreCase("Saturday Not available")) {
            tgBtnSaturday.setSelected(false);
        } else {
            tgBtnSaturday.setSelected(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tgBtnSaturdayStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatchedTrains.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MatchedTrains().setVisible(true);
            }
        });

    }

    public static void abc(ArrayList<Integer> availTrains, String sourceParameter,
            String destinationParameter, String cclass, String date) {
        matchedTrainsNos = availTrains;
        source = sourceParameter;
        destination = destinationParameter;
        clas = cclass;
        date1 = date;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboTrainName;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblTrainNo;
    private javax.swing.JLabel lblTrainType;
    private javax.swing.JList lstClasses;
    private javax.swing.JTable tblStopsDetails;
    private javax.swing.JToggleButton tgBtnFriday;
    private javax.swing.JToggleButton tgBtnMonday;
    private javax.swing.JToggleButton tgBtnSaturday;
    private javax.swing.JToggleButton tgBtnSunday;
    private javax.swing.JToggleButton tgBtnThursday;
    private javax.swing.JToggleButton tgBtnTuesday;
    private javax.swing.JToggleButton tgBtnWednesday;
    // End of variables declaration//GEN-END:variables

    private void getClasses() {
        String query =
                "select classname from " + DatabaseConnection.TABLE_TRAIN_AND_CLASS + " where train_no="
                + trainNameAndNo.get(comboTrainName.getSelectedItem().toString());
        try {
            ResultSet result = DatabaseConnection.executeQuery(query);
            final DefaultListModel model1 = new DefaultListModel();
            lstClasses.setModel(model1);
            while (result.next()) {
                model1.addElement(result.getString("Classname"));
            }
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }

    private void getTrainType() {
        String query =
                "select type from " + DatabaseConnection.TABLE_TRAIN_INFO + " where train_no="
                + trainNameAndNo.get(comboTrainName.getSelectedItem().toString());
        try {
            ResultSet result = DatabaseConnection.executeQuery(query);

            while (result.next()) {
                lblTrainType.setText(result.getString("type"));
            }
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }

    private void getTrainRunningDays() {
        tgBtnMonday.setSelected(false);
        tgBtnTuesday.setSelected(false);
        tgBtnWednesday.setSelected(false);
        tgBtnThursday.setSelected(false);
        tgBtnFriday.setSelected(false);
        tgBtnSaturday.setSelected(false);
        tgBtnSunday.setSelected(false);
        tgBtnMonday.setToolTipText("Monday not available");
        tgBtnTuesday.setToolTipText("Tuesday not available");
        tgBtnWednesday.setToolTipText("Wednesday Not available");
        tgBtnThursday.setToolTipText("Thursday Not available");
        tgBtnFriday.setToolTipText("Friday Not available");
        tgBtnSaturday.setToolTipText("Saturday Not available");
        tgBtnSunday.setToolTipText("Sunday Not available");


        String query =
                "select dayname from " + DatabaseConnection.TABLE_TRAIN_AND_DAYS + " where train_no="
                + trainNameAndNo.get(comboTrainName.getSelectedItem().toString());
        try {
            ResultSet result = DatabaseConnection.executeQuery(query);

            while (result.next()) {
                if (result.getString("dayname").equalsIgnoreCase("all")) {
                    tgBtnMonday.setSelected(true);
                    tgBtnTuesday.setSelected(true);
                    tgBtnWednesday.setSelected(true);
                    tgBtnThursday.setSelected(true);
                    tgBtnFriday.setSelected(true);
                    tgBtnSaturday.setSelected(true);
                    tgBtnSunday.setSelected(true);
                    tgBtnMonday.setToolTipText("Monday available");
                    tgBtnTuesday.setToolTipText("Tuesday available");
                    tgBtnWednesday.setToolTipText("Wednesday available");
                    tgBtnThursday.setToolTipText("Thursday available");
                    tgBtnFriday.setToolTipText("Friday available");
                    tgBtnSaturday.setToolTipText("Saturday available");
                    tgBtnSunday.setToolTipText("Sunday available");

                } else if (result.getString("dayname").equalsIgnoreCase("monday")) {
                    tgBtnMonday.setSelected(true);
                    tgBtnMonday.setToolTipText("Monday available");
                } else if (result.getString("dayname").equalsIgnoreCase("tuesday")) {
                    tgBtnTuesday.setSelected(true);
                    tgBtnTuesday.setToolTipText("Tuesday available");
                } else if (result.getString("dayname").equalsIgnoreCase("wednesday")) {
                    tgBtnWednesday.setSelected(true);
                    tgBtnWednesday.setToolTipText("Wednesday available");
                } else if (result.getString("dayname").equalsIgnoreCase("thursday")) {
                    tgBtnThursday.setSelected(true);
                    tgBtnThursday.setToolTipText("Thursday available");
                } else if (result.getString("dayname").equalsIgnoreCase("friday")) {
                    tgBtnFriday.setSelected(true);
                    tgBtnFriday.setToolTipText("Friday available");
                } else if (result.getString("dayname").equalsIgnoreCase("saturday")) {
                    tgBtnSaturday.setSelected(true);
                    tgBtnSaturday.setToolTipText("Saturday available");
                } else if (result.getString("dayname").equalsIgnoreCase("sunday")) {
                    tgBtnSunday.setSelected(true);
                    tgBtnSunday.setToolTipText("Sunday available");
                }
            }
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }

    private void getStopsDetails() {
        try {
            String query = "select stationname, station_order,time from station_and_train st,"
                    + " station_code_and_name scn "
                    + "where st.station_code=scn.StationCode and st.train_no="
                    + trainNameAndNo.get(comboTrainName.getSelectedItem().toString())
                    + " order by st.station_order";
            System.out.println(query);
            ResultSet result = DatabaseConnection.executeQuery(query);
            DefaultTableModel model = (DefaultTableModel) tblStopsDetails.getModel();
            while (result.next()) {
                model.addRow(new Object[]{
                    "Stop " + result.getInt("station_order"),
                    result.getString("stationname"),
                    result.getString("time")
                });
            }
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }
}
